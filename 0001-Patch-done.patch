From f2620141dc12e2f2a17db8135aac22c5d578b216 Mon Sep 17 00:00:00 2001
From: Parv Dave <parvd5@gmail.com>
Date: Thu, 30 Apr 2020 00:56:31 +0530
Subject: [PATCH] Patch done

---
 src/DataManipulator.ts | 37 +++++++++++++++++++++++++------------
 src/Graph.tsx          | 29 +++++++++++++++++------------
 2 files changed, 42 insertions(+), 24 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..a5791fb 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,33 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
-  timestamp: Date,
+  price_abc:number,
+  price_def:number,
+  ratio: number,
+  timestamp:Date,
+  upper_bound:number,
+  lower_bound:number,
+  trigger_alert:number|undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
-  }
+  static generateRow(serverRespond: ServerRespond[]): Row {
+    const priceabc = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price)/2; 
+    const pricedef = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price)/2;
+    const ratio = priceabc/pricedef;
+    const upbound=1 + 0.05;
+    const lobound=1 + 0.05;
+    return{
+      price_abc: priceabc,
+      price_def: pricedef,
+      ratio,
+      timestamp : serverRespond[0].timestamp > serverRespond[1].timestamp ?
+        serverRespond[0].timestamp : serverRespond[1].timestamp,
+      upper_bound:upbound,
+      lower_bound:lobound,
+      trigger_alert:( ratio>upbound || ratio < lobound)?ratio:undefined,
+    };
+    };
 }
+
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 58fb997..99004b3 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
-      timestamp: 'date',
+      price_abc:'float',
+      price_def:'float',
+      ratio: 'float',
+      timestamp:'date',
+      upper_bound:'float',
+      lower_bound:'float',
+      trigger_alert:'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,23 +39,25 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio","lower_bound","upper_bound","trigerger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
+      price_abc:'avg',
+      price_def:'avg',
+      ratio: 'avg',
+      timestamp:'distinct count',
+      upper_bound:'avg',
+      lower_bound:'avg',
+      trigger_alert:'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]);
     }
   }
 }
-- 
2.26.2.windows.1

